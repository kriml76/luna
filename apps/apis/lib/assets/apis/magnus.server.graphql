scalar Double

scalar Float

scalar Int32

scalar Int64

scalar Uint32

scalar Sint32

scalar Fixed32

scalar Sfixed32

scalar Uint64

scalar Sint64

scalar Fixed64

scalar Sfixed64

scalar Bool

scalar Bytes

scalar Empty

scalar Error

scalar Json

scalar Timestamp

scalar Date

scalar ID

type RoomType {
  "id"
  id: Int
  "类型名"
  title: String
  rooms: [Room]
}

"段位限制"
type RoomLimit {
  id: Int
  title: String
  rooms: [Room]
}

type GameLog {
  id: Int
  "输赢"
  status: Int
  "注码"
  count: Int
  "开始时间"
  startTime: String
  "结束时间"
  endTime: String
  "房间"
  room: Room
  roomId: Int
  members: [Member]
  memberId: Int
  "提现时间"
  createDate: String
}

type Room {
  "房间名称"
  title: String
  "隐藏房间"
  isHidden: Boolean
  "id"
  id: Int
  "房间密码"
  password: String
  "开始方式"
  startType: String
  "房间类型、场地选择"
  roomType: RoomType
  "段位限制"
  roomLimit: RoomLimit
  roomTypeId: Int
  "房主"
  owner: Member
  "房主id"
  ownerId: Int
  "加入房间的人"
  members: [Member]
  "游戏记录"
  gameLogs: [GameLog]
  "提现时间"
  createDate: String
}

type TixianLog {
  relations: [String]
  id: Int
  "提现人"
  member: Member
  memberId: Int
  getMember: Member
  "提现数量"
  count: Int
  "提现状态"
  status: Int
  "提现时间"
  createDate: String
}

type Ticket {
  id: Int
  "名称"
  title: String
  "金币"
  fee: Int
  "总数"
  count: Int
  "领取记录"
  logs: [TicketLog]
  createDate: String
  updateDate: String
}

type TicketLog {
  relations: [String]
  id: Int
  ticket: Ticket
  ticket_Id: Int
  member: Member
  member_id: Int
  createDate: String
}

type Account {
  id: Int
  nickname: String
  steamId: String
  member: Member
  level: String
}

type Member {
  id: Int
  "昵称"
  nickname: String
  "密码"
  password: String
  "头像"
  avatar: String
  "电话"
  mobile: String
  "微信id"
  openid: String
  "状态 0禁用 1正常"
  status: Int
  "余额"
  fee: Int
  "金币"
  fee2: Int
  "钻石"
  fee3: Int
  "用户加入的房间"
  rooms: [Room]
  "用户创建的房间"
  createRooms: [Room]
  "提现记录"
  tixianLogs: [TixianLog]
  "游戏记录"
  gameLogs: [GameLog]
  "用户领取的劵"
  ticketLogs: [TicketLog]
  "提现时间"
  createDate: String
  account: Account
}

type GameLogListResult {
  list: [GameLog]
  count: Int
}

type GameLogListMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-8位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: GameLogListResult
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

input GameLogWhere {
  " 在制定内，如[1,2,3,...]"
  id_In: [Int]
  " 小于"
  id_Lt: Int
  " 小于等于"
  id_Lte: Int
  " 大于"
  id_Gt: Int
  " 大于等于"
  id_Gte: Int
  " 指定范围[min,max]"
  id_Between: [Int]
  " 等于"
  id: Int
  "输赢 等于"
  status: Int
  "注码 等于"
  count: Int
  "开始时间 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  startTime_Like: String
  "开始时间 等于"
  startTime: String
  "结束时间 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  endTime_Like: String
  "结束时间 等于"
  endTime: String
  " 等于"
  roomId: Int
  " 等于"
  memberId: Int
  "提现时间 小于"
  createDate_Lt: Date
  "提现时间 小于等于"
  createDate_Lte: Date
  "提现时间 大于"
  createDate_Gt: Date
  "提现时间 大于等于"
  createDate_Gte: Date
  "提现时间 指定范围[min,max]"
  createDate_Between: [Date]
  "提现时间 等于"
  createDate: String
  ""
  AND: [GameLogWhere]
  ""
  OR: [GameLogWhere]
}

input GameLogOrder {
  " ASC 升序 DESC降序"
  id: String
  "输赢 ASC 升序 DESC降序"
  status: String
  "注码 ASC 升序 DESC降序"
  count: String
  " ASC 升序 DESC降序"
  roomId: String
  " ASC 升序 DESC降序"
  memberId: String
  "提现时间 ASC 升序 DESC降序"
  createDate: String
}

input LimitInput {
  page: Int
  psize: Int
}

type AccountListResult {
  list: [Account]
  count: Int
}

type AccountListMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-8位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: AccountListResult
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

input AccountWhere {
  " 在制定内，如[1,2,3,...]"
  id_In: [Int]
  " 小于"
  id_Lt: Int
  " 小于等于"
  id_Lte: Int
  " 大于"
  id_Gt: Int
  " 大于等于"
  id_Gte: Int
  " 指定范围[min,max]"
  id_Between: [Int]
  " 等于"
  id: Int
  " 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  nickname_Like: String
  " 等于"
  nickname: String
  " 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  steamId_Like: String
  " 等于"
  steamId: String
  " 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  level_Like: String
  " 等于"
  level: String
  ""
  AND: [AccountWhere]
  ""
  OR: [AccountWhere]
}

input AccountOrder {
  " ASC 升序 DESC降序"
  id: String
}

type MemberListResult {
  list: [Member]
  count: Int
}

type MemberListMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-8位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: MemberListResult
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

input MemberWhere {
  " 在制定内，如[1,2,3,...]"
  id_In: [Int]
  " 小于"
  id_Lt: Int
  " 小于等于"
  id_Lte: Int
  " 大于"
  id_Gt: Int
  " 大于等于"
  id_Gte: Int
  " 指定范围[min,max]"
  id_Between: [Int]
  " 等于"
  id: Int
  "昵称 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  nickname_Like: String
  "昵称 等于"
  nickname: String
  "密码 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  password_Like: String
  "密码 等于"
  password: String
  "头像 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  avatar_Like: String
  "头像 等于"
  avatar: String
  "电话 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  mobile_Like: String
  "电话 等于"
  mobile: String
  "微信id 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  openid_Like: String
  "微信id 等于"
  openid: String
  "状态 0禁用 1正常 等于"
  status: Int
  "余额 等于"
  fee: Int
  "金币 等于"
  fee2: Int
  "钻石 等于"
  fee3: Int
  "提现时间 小于"
  createDate_Lt: Date
  "提现时间 小于等于"
  createDate_Lte: Date
  "提现时间 大于"
  createDate_Gt: Date
  "提现时间 大于等于"
  createDate_Gte: Date
  "提现时间 指定范围[min,max]"
  createDate_Between: [Date]
  "提现时间 等于"
  createDate: String
  ""
  AND: [MemberWhere]
  ""
  OR: [MemberWhere]
}

input MemberOrder {
  " ASC 升序 DESC降序"
  id: String
  "状态 0禁用 1正常 ASC 升序 DESC降序"
  status: String
  "余额 ASC 升序 DESC降序"
  fee: String
  "金币 ASC 升序 DESC降序"
  fee2: String
  "钻石 ASC 升序 DESC降序"
  fee3: String
  "提现时间 ASC 升序 DESC降序"
  createDate: String
}

type RoomListResult {
  list: [Room]
  count: Int
}

type RoomListMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-8位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: RoomListResult
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

input RoomWhere {
  "房间名称 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  title_Like: String
  "房间名称 等于"
  title: String
  "隐藏房间 等于"
  isHidden: Boolean
  "id 在制定内，如[1,2,3,...]"
  id_In: [Int]
  "id 小于"
  id_Lt: Int
  "id 小于等于"
  id_Lte: Int
  "id 大于"
  id_Gt: Int
  "id 大于等于"
  id_Gte: Int
  "id 指定范围[min,max]"
  id_Between: [Int]
  "id 等于"
  id: Int
  "房间密码 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  password_Like: String
  "房间密码 等于"
  password: String
  "开始方式 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  startType_Like: String
  "开始方式 等于"
  startType: String
  " 等于"
  roomTypeId: Int
  "房主id 等于"
  ownerId: Int
  "提现时间 小于"
  createDate_Lt: Date
  "提现时间 小于等于"
  createDate_Lte: Date
  "提现时间 大于"
  createDate_Gt: Date
  "提现时间 大于等于"
  createDate_Gte: Date
  "提现时间 指定范围[min,max]"
  createDate_Between: [Date]
  "提现时间 等于"
  createDate: String
  ""
  AND: [RoomWhere]
  ""
  OR: [RoomWhere]
}

input RoomOrder {
  "id ASC 升序 DESC降序"
  id: String
  " ASC 升序 DESC降序"
  roomTypeId: String
  "房主id ASC 升序 DESC降序"
  ownerId: String
  "提现时间 ASC 升序 DESC降序"
  createDate: String
}

type RoomLimitListResult {
  list: [RoomLimit]
  count: Int
}

type RoomLimitListMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-8位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: RoomLimitListResult
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

input RoomLimitWhere {
  " 在制定内，如[1,2,3,...]"
  id_In: [Int]
  " 小于"
  id_Lt: Int
  " 小于等于"
  id_Lte: Int
  " 大于"
  id_Gt: Int
  " 大于等于"
  id_Gte: Int
  " 指定范围[min,max]"
  id_Between: [Int]
  " 等于"
  id: Int
  " 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  title_Like: String
  " 等于"
  title: String
  ""
  AND: [RoomLimitWhere]
  ""
  OR: [RoomLimitWhere]
}

input RoomLimitOrder {
  " ASC 升序 DESC降序"
  id: String
}

type RoomTypeListResult {
  list: [RoomType]
  count: Int
}

type RoomTypeListMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-8位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: RoomTypeListResult
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

input RoomTypeWhere {
  "id 在制定内，如[1,2,3,...]"
  id_In: [Int]
  "id 小于"
  id_Lt: Int
  "id 小于等于"
  id_Lte: Int
  "id 大于"
  id_Gt: Int
  "id 大于等于"
  id_Gte: Int
  "id 指定范围[min,max]"
  id_Between: [Int]
  "id 等于"
  id: Int
  "类型名 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  title_Like: String
  "类型名 等于"
  title: String
  ""
  AND: [RoomTypeWhere]
  ""
  OR: [RoomTypeWhere]
}

input RoomTypeOrder {
  "id ASC 升序 DESC降序"
  id: String
}

type Setting {
  "id"
  id: Int
  "key"
  key: String
  "value"
  value: String
}

type SettingListResult {
  list: [Setting]
  count: Int
}

type SettingListMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-8位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: SettingListResult
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

input SettingWhere {
  "id 在制定内，如[1,2,3,...]"
  id_In: [Int]
  "id 小于"
  id_Lt: Int
  "id 小于等于"
  id_Lte: Int
  "id 大于"
  id_Gt: Int
  "id 大于等于"
  id_Gte: Int
  "id 指定范围[min,max]"
  id_Between: [Int]
  "id 等于"
  id: Int
  "key 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  key_Like: String
  "key 等于"
  key: String
  "value 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  value_Like: String
  "value 等于"
  value: String
  ""
  AND: [SettingWhere]
  ""
  OR: [SettingWhere]
}

input SettingOrder {
  "id ASC 升序 DESC降序"
  id: String
}

type TicketListResult {
  list: [Ticket]
  count: Int
}

type TicketListMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-8位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: TicketListResult
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

input TicketWhere {
  " 在制定内，如[1,2,3,...]"
  id_In: [Int]
  " 小于"
  id_Lt: Int
  " 小于等于"
  id_Lte: Int
  " 大于"
  id_Gt: Int
  " 大于等于"
  id_Gte: Int
  " 指定范围[min,max]"
  id_Between: [Int]
  " 等于"
  id: Int
  "名称 包含,左{title: \"a%\"} 右边{title: \"%a\"} 包含{title: \"%a%\"}"
  title_Like: String
  "名称 等于"
  title: String
  "金币 等于"
  fee: Int
  "总数 等于"
  count: Int
  " 小于"
  createDate_Lt: Date
  " 小于等于"
  createDate_Lte: Date
  " 大于"
  createDate_Gt: Date
  " 大于等于"
  createDate_Gte: Date
  " 指定范围[min,max]"
  createDate_Between: [Date]
  " 等于"
  createDate: String
  " 小于"
  updateDate_Lt: Date
  " 小于等于"
  updateDate_Lte: Date
  " 大于"
  updateDate_Gt: Date
  " 大于等于"
  updateDate_Gte: Date
  " 指定范围[min,max]"
  updateDate_Between: [Date]
  " 等于"
  updateDate: String
  ""
  AND: [TicketWhere]
  ""
  OR: [TicketWhere]
}

input TicketOrder {
  " ASC 升序 DESC降序"
  id: String
  "金币 ASC 升序 DESC降序"
  fee: String
  "总数 ASC 升序 DESC降序"
  count: String
  " ASC 升序 DESC降序"
  createDate: String
  " ASC 升序 DESC降序"
  updateDate: String
}

type TicketLogListResult {
  list: [TicketLog]
  count: Int
}

type TicketLogListMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-8位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: TicketLogListResult
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

input TicketLogWhere {
  " 在制定内，如[1,2,3,...]"
  id_In: [Int]
  " 小于"
  id_Lt: Int
  " 小于等于"
  id_Lte: Int
  " 大于"
  id_Gt: Int
  " 大于等于"
  id_Gte: Int
  " 指定范围[min,max]"
  id_Between: [Int]
  " 等于"
  id: Int
  " 等于"
  ticket_Id: Int
  " 等于"
  member_id: Int
  " 小于"
  createDate_Lt: Date
  " 小于等于"
  createDate_Lte: Date
  " 大于"
  createDate_Gt: Date
  " 大于等于"
  createDate_Gte: Date
  " 指定范围[min,max]"
  createDate_Between: [Date]
  " 等于"
  createDate: String
  ""
  AND: [TicketLogWhere]
  ""
  OR: [TicketLogWhere]
}

input TicketLogOrder {
  " ASC 升序 DESC降序"
  id: String
  " ASC 升序 DESC降序"
  ticket_Id: String
  " ASC 升序 DESC降序"
  member_id: String
  " ASC 升序 DESC降序"
  createDate: String
}

type TixianLogListResult {
  list: [TixianLog]
  count: Int
}

type TixianLogListMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-8位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: TixianLogListResult
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

input TixianLogWhere {
  " 在制定内，如[1,2,3,...]"
  id_In: [Int]
  " 小于"
  id_Lt: Int
  " 小于等于"
  id_Lte: Int
  " 大于"
  id_Gt: Int
  " 大于等于"
  id_Gte: Int
  " 指定范围[min,max]"
  id_Between: [Int]
  " 等于"
  id: Int
  " 等于"
  memberId: Int
  "提现数量 等于"
  count: Int
  "提现状态 等于"
  status: Int
  "提现时间 小于"
  createDate_Lt: Date
  "提现时间 小于等于"
  createDate_Lte: Date
  "提现时间 大于"
  createDate_Gt: Date
  "提现时间 大于等于"
  createDate_Gte: Date
  "提现时间 指定范围[min,max]"
  createDate_Between: [Date]
  "提现时间 等于"
  createDate: String
  ""
  AND: [TixianLogWhere]
  ""
  OR: [TixianLogWhere]
}

input TixianLogOrder {
  " ASC 升序 DESC降序"
  id: String
  " ASC 升序 DESC降序"
  memberId: String
  "提现数量 ASC 升序 DESC降序"
  count: String
  "提现状态 ASC 升序 DESC降序"
  status: String
  "提现时间 ASC 升序 DESC降序"
  createDate: String
}

"header refreshToken"
type GameLogMessage {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-9位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: GameLog
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

"header refreshToken"
type AccountMessage {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-9位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: Account
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

"header refreshToken"
type MemberMessage {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-9位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: Member
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

"header refreshToken"
type RoomMessage {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-9位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: Room
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

"header refreshToken"
type RoomLimitMessage {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-9位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: RoomLimit
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

"header refreshToken"
type RoomTypeMessage {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-9位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: RoomType
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

"header refreshToken"
type SettingMessage {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-9位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: Setting
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

"header refreshToken"
type TicketMessage {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-9位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: Ticket
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

"header refreshToken"
type TicketLogMessage {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-9位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: TicketLog
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

"header refreshToken"
type TixianLogMessage {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码\n#### 6-9位\n> 业务编码"
  code: String
  "用户友好提示"
  message: String
  "返回数据"
  data: TixianLog
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
}

type GameLogMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码 基础信息管理 001\n#### ６-9\n> 业务编码 2000表示正常"
  code: String
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
  "用户友好提示"
  message: String
  "返回数据"
  data: [GameLog]
}

type AccountMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码 基础信息管理 001\n#### ６-9\n> 业务编码 2000表示正常"
  code: String
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
  "用户友好提示"
  message: String
  "返回数据"
  data: [Account]
}

type MemberMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码 基础信息管理 001\n#### ６-9\n> 业务编码 2000表示正常"
  code: String
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
  "用户友好提示"
  message: String
  "返回数据"
  data: [Member]
}

type RoomMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码 基础信息管理 001\n#### ６-9\n> 业务编码 2000表示正常"
  code: String
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
  "用户友好提示"
  message: String
  "返回数据"
  data: [Room]
}

type RoomLimitMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码 基础信息管理 001\n#### ６-9\n> 业务编码 2000表示正常"
  code: String
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
  "用户友好提示"
  message: String
  "返回数据"
  data: [RoomLimit]
}

type RoomTypeMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码 基础信息管理 001\n#### ６-9\n> 业务编码 2000表示正常"
  code: String
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
  "用户友好提示"
  message: String
  "返回数据"
  data: [RoomType]
}

type SettingMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码 基础信息管理 001\n#### ６-9\n> 业务编码 2000表示正常"
  code: String
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
  "用户友好提示"
  message: String
  "返回数据"
  data: [Setting]
}

type TicketMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码 基础信息管理 001\n#### ６-9\n> 业务编码 2000表示正常"
  code: String
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
  "用户友好提示"
  message: String
  "返回数据"
  data: [Ticket]
}

type TicketLogMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码 基础信息管理 001\n#### ６-9\n> 业务编码 2000表示正常"
  code: String
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
  "用户友好提示"
  message: String
  "返回数据"
  data: [TicketLog]
}

type TixianLogMessages {
  "#### 1位:\n> H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员\n#### 2位:\n> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面\n#### 3-5位:\n> 子系统编码 基础信息管理 001\n#### ６-9\n> 业务编码 2000表示正常"
  code: String
  "H: Http 网络维护人员 B: Backend 后端人员 C: Client 前端人员"
  pre: String
  "子系统编码 基础信息管理 001"
  system: String
  "> 错误等级,0 log提示 无, 1 info提示, 2 warning提示 3 error提示 4 info 弹框 5 warning 弹框 6 error弹框 7 权限不足 8 全屏警告 9 错误页面"
  level: String
  "业务编码 2000表示正常"
  serviceCode: String
  "用户友好提示"
  message: String
  "返回数据"
  data: [TixianLog]
}

input GameLogSimple {
  ""
  id: Int
  "输赢"
  status: Int
  "注码"
  count: Int
  "开始时间"
  startTime: String
  "结束时间"
  endTime: String
  ""
  roomId: Int
  ""
  memberId: Int
}

input AccountSimple {
  ""
  id: Int
  ""
  nickname: String
  ""
  steamId: String
  ""
  level: String
}

input MemberSimple {
  ""
  id: Int
  "昵称"
  nickname: String
  "密码"
  password: String
  "头像"
  avatar: String
  "电话"
  mobile: String
  "微信id"
  openid: String
  "状态 0禁用 1正常"
  status: Int
  "余额"
  fee: Int
  "金币"
  fee2: Int
  "钻石"
  fee3: Int
}

input RoomSimple {
  "房间名称"
  title: String
  "隐藏房间"
  isHidden: Boolean
  "id"
  id: Int
  "房间密码"
  password: String
  "开始方式"
  startType: String
  ""
  roomTypeId: Int
  "房主id"
  ownerId: Int
}

input RoomLimitSimple {
  ""
  id: Int
  ""
  title: String
}

input RoomTypeSimple {
  "id"
  id: Int
  "类型名"
  title: String
}

input SettingSimple {
  "id"
  id: Int
  "key"
  key: String
  "value"
  value: String
}

input TicketSimple {
  ""
  id: Int
  "名称"
  title: String
  "金币"
  fee: Int
  "总数"
  count: Int
}

input TicketLogSimple {
  ""
  id: Int
  ""
  ticket_Id: Int
  ""
  member_id: Int
}

input TixianLogSimple {
  ""
  id: Int
  ""
  memberId: Int
  "提现数量"
  count: Int
  "提现状态"
  status: Int
}

input RoomTypeInput {
  "id"
  id: Int
  "类型名"
  title: String
  rooms: [RoomInput]
}

"段位限制"
input RoomLimitInput {
  id: Int
  title: String
  rooms: [RoomInput]
}

input TixianLogInput {
  relations: [String]
  id: Int
  "提现人"
  member: MemberInput
  memberId: Int
  "提现数量"
  count: Int
  "提现状态"
  status: Int
  "提现时间"
  createDate: String
}

input TicketInput {
  id: Int
  "名称"
  title: String
  "金币"
  fee: Int
  "总数"
  count: Int
  "领取记录"
  logs: [TicketLogInput]
  createDate: String
  updateDate: String
}

input TicketLogInput {
  relations: [String]
  id: Int
  ticket: TicketInput
  ticket_Id: Int
  member: MemberInput
  member_id: Int
  createDate: String
}

input AccountInput {
  id: Int
  nickname: String
  steamId: String
  member: MemberInput
  level: String
}

input MemberInput {
  id: Int
  "昵称"
  nickname: String
  "密码"
  password: String
  "头像"
  avatar: String
  "电话"
  mobile: String
  "微信id"
  openid: String
  "状态 0禁用 1正常"
  status: Int
  "余额"
  fee: Int
  "金币"
  fee2: Int
  "钻石"
  fee3: Int
  "用户加入的房间"
  rooms: [RoomInput]
  "用户创建的房间"
  createRooms: [RoomInput]
  "提现记录"
  tixianLogs: [TixianLogInput]
  "游戏记录"
  gameLogs: [GameLogInput]
  "用户领取的劵"
  ticketLogs: [TicketLogInput]
  "提现时间"
  createDate: String
  account: AccountInput
}

input RoomInput {
  "房间名称"
  title: String
  "隐藏房间"
  isHidden: Boolean
  "id"
  id: Int
  "房间密码"
  password: String
  "开始方式"
  startType: String
  "房间类型、场地选择"
  roomType: RoomTypeInput
  "段位限制"
  roomLimit: RoomLimitInput
  roomTypeId: Int
  "房主"
  owner: MemberInput
  "房主id"
  ownerId: Int
  "加入房间的人"
  members: [MemberInput]
  "游戏记录"
  gameLogs: [GameLogInput]
  "提现时间"
  createDate: String
}

input GameLogInput {
  id: Int
  "输赢"
  status: Int
  "注码"
  count: Int
  "开始时间"
  startTime: String
  "结束时间"
  endTime: String
  "房间"
  room: RoomInput
  roomId: Int
  members: [MemberInput]
  memberId: Int
  "提现时间"
  createDate: String
}

input SettingInput {
  "id"
  id: Int
  "key"
  key: String
  "value"
  value: String
}

type Query {
  "获取列表\n默认分页{page: 1, psize: 20}"
  gameLogList(where: GameLogWhere, order: GameLogOrder, limit: LimitInput): GameLogListMessages
  "获取列表\n默认分页{page: 1, psize: 20}"
  accountList(where: AccountWhere, order: AccountOrder, limit: LimitInput): AccountListMessages
  "获取列表\n默认分页{page: 1, psize: 20}"
  memberList(where: MemberWhere, order: MemberOrder, limit: LimitInput): MemberListMessages
  "获取列表\n默认分页{page: 1, psize: 20}"
  roomList(where: RoomWhere, order: RoomOrder, limit: LimitInput): RoomListMessages
  "获取列表\n默认分页{page: 1, psize: 20} 段位限制"
  roomLimitList(where: RoomLimitWhere, order: RoomLimitOrder, limit: LimitInput): RoomLimitListMessages
  "获取列表\n默认分页{page: 1, psize: 20}"
  roomTypeList(where: RoomTypeWhere, order: RoomTypeOrder, limit: LimitInput): RoomTypeListMessages
  "获取列表\n默认分页{page: 1, psize: 20}"
  settingList(where: SettingWhere, order: SettingOrder, limit: LimitInput): SettingListMessages
  "获取列表\n默认分页{page: 1, psize: 20}"
  ticketList(where: TicketWhere, order: TicketOrder, limit: LimitInput): TicketListMessages
  "获取列表\n默认分页{page: 1, psize: 20}"
  ticketLogList(where: TicketLogWhere, order: TicketLogOrder, limit: LimitInput): TicketLogListMessages
  "获取列表\n默认分页{page: 1, psize: 20}"
  tixianLogList(where: TixianLogWhere, order: TixianLogOrder, limit: LimitInput): TixianLogListMessages
  "获取单条"
  gameLogDetail(where: GameLogWhere): GameLogMessage
  "获取单条"
  accountDetail(where: AccountWhere): AccountMessage
  "获取单条"
  memberDetail(where: MemberWhere): MemberMessage
  "获取单条"
  roomDetail(where: RoomWhere): RoomMessage
  "获取单条 段位限制"
  roomLimitDetail(where: RoomLimitWhere): RoomLimitMessage
  "获取单条"
  roomTypeDetail(where: RoomTypeWhere): RoomTypeMessage
  "获取单条"
  settingDetail(where: SettingWhere): SettingMessage
  "获取单条"
  ticketDetail(where: TicketWhere): TicketMessage
  "获取单条"
  ticketLogDetail(where: TicketLogWhere): TicketLogMessage
  "获取单条"
  tixianLogDetail(where: TixianLogWhere): TixianLogMessage
  "获取所有\n没有分页"
  gameLogAll(where: GameLogWhere, order: GameLogOrder): GameLogMessages
  "获取所有\n没有分页"
  accountAll(where: AccountWhere, order: AccountOrder): AccountMessages
  "获取所有\n没有分页"
  memberAll(where: MemberWhere, order: MemberOrder): MemberMessages
  "获取所有\n没有分页"
  roomAll(where: RoomWhere, order: RoomOrder): RoomMessages
  "获取所有\n没有分页 段位限制"
  roomLimitAll(where: RoomLimitWhere, order: RoomLimitOrder): RoomLimitMessages
  "获取所有\n没有分页"
  roomTypeAll(where: RoomTypeWhere, order: RoomTypeOrder): RoomTypeMessages
  "获取所有\n没有分页"
  settingAll(where: SettingWhere, order: SettingOrder): SettingMessages
  "获取所有\n没有分页"
  ticketAll(where: TicketWhere, order: TicketOrder): TicketMessages
  "获取所有\n没有分页"
  ticketLogAll(where: TicketLogWhere, order: TicketLogOrder): TicketLogMessages
  "获取所有\n没有分页"
  tixianLogAll(where: TixianLogWhere, order: TixianLogOrder): TixianLogMessages
}

type Mutation {
  "删除"
  gameLogDeleteId(id: ID!): GameLogMessage
  "删除"
  accountDeleteId(id: ID!): AccountMessage
  "删除"
  memberDeleteId(id: ID!): MemberMessage
  "删除"
  roomDeleteId(id: ID!): RoomMessage
  "删除 段位限制"
  roomLimitDeleteId(id: ID!): RoomLimitMessage
  "删除"
  roomTypeDeleteId(id: ID!): RoomTypeMessage
  "删除"
  settingDeleteId(id: ID!): SettingMessage
  "删除"
  ticketDeleteId(id: ID!): TicketMessage
  "删除"
  ticketLogDeleteId(id: ID!): TicketLogMessage
  "删除"
  tixianLogDeleteId(id: ID!): TixianLogMessage
  gameLogDelete(where: GameLogWhere!): GameLogMessage
  accountDelete(where: AccountWhere!): AccountMessage
  memberDelete(where: MemberWhere!): MemberMessage
  roomDelete(where: RoomWhere!): RoomMessage
  "段位限制"
  roomLimitDelete(where: RoomLimitWhere!): RoomLimitMessage
  roomTypeDelete(where: RoomTypeWhere!): RoomTypeMessage
  settingDelete(where: SettingWhere!): SettingMessage
  ticketDelete(where: TicketWhere!): TicketMessage
  ticketLogDelete(where: TicketLogWhere!): TicketLogMessage
  tixianLogDelete(where: TixianLogWhere!): TixianLogMessage
  "批量删除"
  gameLogDeletes(ids: [ID]!): GameLogMessages
  "批量删除"
  accountDeletes(ids: [ID]!): AccountMessages
  "批量删除"
  memberDeletes(ids: [ID]!): MemberMessages
  "批量删除"
  roomDeletes(ids: [ID]!): RoomMessages
  "批量删除 段位限制"
  roomLimitDeletes(ids: [ID]!): RoomLimitMessages
  "批量删除"
  roomTypeDeletes(ids: [ID]!): RoomTypeMessages
  "批量删除"
  settingDeletes(ids: [ID]!): SettingMessages
  "批量删除"
  ticketDeletes(ids: [ID]!): TicketMessages
  "批量删除"
  ticketLogDeletes(ids: [ID]!): TicketLogMessages
  "批量删除"
  tixianLogDeletes(ids: [ID]!): TixianLogMessages
  gameLogUpdate(where: GameLogWhere!, entity: GameLogSimple!): GameLogMessage
  accountUpdate(where: AccountWhere!, entity: AccountSimple!): AccountMessage
  memberUpdate(where: MemberWhere!, entity: MemberSimple!): MemberMessage
  roomUpdate(where: RoomWhere!, entity: RoomSimple!): RoomMessage
  "段位限制"
  roomLimitUpdate(where: RoomLimitWhere!, entity: RoomLimitSimple!): RoomLimitMessage
  roomTypeUpdate(where: RoomTypeWhere!, entity: RoomTypeSimple!): RoomTypeMessage
  settingUpdate(where: SettingWhere!, entity: SettingSimple!): SettingMessage
  ticketUpdate(where: TicketWhere!, entity: TicketSimple!): TicketMessage
  ticketLogUpdate(where: TicketLogWhere!, entity: TicketLogSimple!): TicketLogMessage
  tixianLogUpdate(where: TixianLogWhere!, entity: TixianLogSimple!): TixianLogMessage
  "更新或新增\n修改状态等操作,应使用update"
  gameLogEdit(entity: GameLogInput!): GameLogMessage
  "更新或新增\n修改状态等操作,应使用update"
  accountEdit(entity: AccountInput!): AccountMessage
  "更新或新增\n修改状态等操作,应使用update"
  memberEdit(entity: MemberInput!): MemberMessage
  "更新或新增\n修改状态等操作,应使用update"
  roomEdit(entity: RoomInput!): RoomMessage
  "更新或新增\n修改状态等操作,应使用update 段位限制"
  roomLimitEdit(entity: RoomLimitInput!): RoomLimitMessage
  "更新或新增\n修改状态等操作,应使用update"
  roomTypeEdit(entity: RoomTypeInput!): RoomTypeMessage
  "更新或新增\n修改状态等操作,应使用update"
  settingEdit(entity: SettingInput!): SettingMessage
  "更新或新增\n修改状态等操作,应使用update"
  ticketEdit(entity: TicketInput!): TicketMessage
  "更新或新增\n修改状态等操作,应使用update"
  ticketLogEdit(entity: TicketLogInput!): TicketLogMessage
  "更新或新增\n修改状态等操作,应使用update"
  tixianLogEdit(entity: TixianLogInput!): TixianLogMessage
  "批量编辑"
  gameLogEdits(entity: [GameLogInput]!): GameLogMessages
  "批量编辑"
  accountEdits(entity: [AccountInput]!): AccountMessages
  "批量编辑"
  memberEdits(entity: [MemberInput]!): MemberMessages
  "批量编辑"
  roomEdits(entity: [RoomInput]!): RoomMessages
  "批量编辑 段位限制"
  roomLimitEdits(entity: [RoomLimitInput]!): RoomLimitMessages
  "批量编辑"
  roomTypeEdits(entity: [RoomTypeInput]!): RoomTypeMessages
  "批量编辑"
  settingEdits(entity: [SettingInput]!): SettingMessages
  "批量编辑"
  ticketEdits(entity: [TicketInput]!): TicketMessages
  "批量编辑"
  ticketLogEdits(entity: [TicketLogInput]!): TicketLogMessages
  "批量编辑"
  tixianLogEdits(entity: [TixianLogInput]!): TixianLogMessages
  "添加单条数据，无自动关联关系"
  gameLogAdd(entity: GameLogSimple!): GameLogMessage
  "添加单条数据，无自动关联关系"
  accountAdd(entity: AccountSimple!): AccountMessage
  "添加单条数据，无自动关联关系"
  memberAdd(entity: MemberSimple!): MemberMessage
  "添加单条数据，无自动关联关系"
  roomAdd(entity: RoomSimple!): RoomMessage
  "添加单条数据，无自动关联关系 段位限制"
  roomLimitAdd(entity: RoomLimitSimple!): RoomLimitMessage
  "添加单条数据，无自动关联关系"
  roomTypeAdd(entity: RoomTypeSimple!): RoomTypeMessage
  "添加单条数据，无自动关联关系"
  settingAdd(entity: SettingSimple!): SettingMessage
  "添加单条数据，无自动关联关系"
  ticketAdd(entity: TicketSimple!): TicketMessage
  "添加单条数据，无自动关联关系"
  ticketLogAdd(entity: TicketLogSimple!): TicketLogMessage
  "添加单条数据，无自动关联关系"
  tixianLogAdd(entity: TixianLogSimple!): TixianLogMessage
  "批量添加"
  gameLogAdds(entity: [GameLogSimple]!): GameLogMessages
  "批量添加"
  accountAdds(entity: [AccountSimple]!): AccountMessages
  "批量添加"
  memberAdds(entity: [MemberSimple]!): MemberMessages
  "批量添加"
  roomAdds(entity: [RoomSimple]!): RoomMessages
  "批量添加 段位限制"
  roomLimitAdds(entity: [RoomLimitSimple]!): RoomLimitMessages
  "批量添加"
  roomTypeAdds(entity: [RoomTypeSimple]!): RoomTypeMessages
  "批量添加"
  settingAdds(entity: [SettingSimple]!): SettingMessages
  "批量添加"
  ticketAdds(entity: [TicketSimple]!): TicketMessages
  "批量添加"
  ticketLogAdds(entity: [TicketLogSimple]!): TicketLogMessages
  "批量添加"
  tixianLogAdds(entity: [TixianLogSimple]!): TixianLogMessages
}
