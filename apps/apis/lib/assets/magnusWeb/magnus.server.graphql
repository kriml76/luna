scalar Double

scalar Float

scalar Int32

scalar Int64

scalar Uint32

scalar Sint32

scalar Fixed32

scalar Sfixed32

scalar Uint64

scalar Sint64

scalar Fixed64

scalar Sfixed64

scalar Bool

scalar Bytes

scalar Empty

scalar Error

scalar Json

scalar Timestamp

scalar Date

input RoomTypeInput {
  "id"
  id: Int
  "类型名"
  title: String
  rooms: [RoomInput]
}

input TixianLogInput {
  relations: [String]
  id: Int
  "提现人"
  member: MemberInput
  memberId: Int
  "提现数量"
  count: Int
  "提现状态"
  status: Int
  "提现时间"
  createDate: String
}

input GameLogInput {
  relations: [String]
  id: Int
  "输赢"
  status: Int
  "注码"
  count: Int
  "开始时间"
  startTime: Int
  "结束时间"
  endTime: Int
  "房间"
  room: RoomInput
  roomId: Int
  member: MemberInput
  memberId: Int
  "提现时间"
  createDate: String
}

input TicketInput {
  id: Int
  title: String
  "领取记录"
  logs: [TicketLogInput]
}

input TicketLogInput {
  relations: [String]
  id: Int
  ticket: TicketInput
  ticket_Id: Int
  member: MemberInput
  member_id: Int
  "提现时间"
  createDate: String
}

input MemberInput {
  relations: [String]
  id: Int
  "昵称"
  nickname: String
  "头像"
  avatar: String
  "电话"
  mobile: String
  "微信id"
  openid: String
  "余额"
  fee: Int
  "金币"
  fee2: Int
  "钻石"
  fee3: Int
  "用户加入的房间"
  rooms: [RoomInput]
  "用户创建的房间"
  createRooms: [RoomInput]
  "提现记录"
  tixianLogs: [TixianLogInput]
  "游戏记录"
  gameLogs: [GameLogInput]
  "用户领取的劵"
  ticketLogs: [TicketLogInput]
  "提现时间"
  createDate: String
}

input RoomInput {
  relations: [String]
  "id"
  id: Int
  "房间密码"
  password: String
  "房间类型"
  roomType: RoomTypeInput
  roomTypeId: Int
  "自动开启"
  autoStart: Boolean
  "房主"
  owner: MemberInput
  ownerId: Int
  "加入房间的人"
  members: [MemberInput]
  gameLogs: [GameLogInput]
  "提现时间"
  createDate: String
}

input RoomInputWhere {
  "id 不等于"
  id_Not: Int
  "id 在制定内，如[1,2]"
  id_In: [Int!]
  "id 不在制定内,如[1,2]"
  id_NotIn: [Int!]
  "id 小于"
  id_Lt: Int
  "id 小于等于"
  id_Lte: Int
  "id 大于"
  id_Gt: Int
  "id 大于等于"
  id_Gte: Int
  "id"
  id: Int
  "房间密码 不等于"
  password_Not: String
  "房间密码 在制定内，如[1,2]"
  password_In: [String!]
  "房间密码 不在制定内,如[1,2]"
  password_NotIn: [String!]
  "房间密码 小于"
  password_Lt: String
  "房间密码 小于等于"
  password_Lte: String
  "房间密码 大于"
  password_Gt: String
  "房间密码 大于等于"
  password_Gte: String
  "房间密码 包含"
  password_Contains: String
  "房间密码 不包含"
  password_NotContains: String
  "房间密码 开头等于"
  password_StartsWith: String
  "房间密码 开头不等于"
  password_NotStartsWith: String
  "房间密码 结尾等于"
  password_EndsWith: String
  "房间密码 结尾不等于"
  password_NotEndsWith: String
  "房间密码"
  password: String
  ""
  roomTypeId_Not: Int
  ""
  roomTypeId_In: [Int!]
  ""
  roomTypeId_NotIn: [Int!]
  ""
  roomTypeId_Lt: Int
  ""
  roomTypeId_Lte: Int
  ""
  roomTypeId_Gt: Int
  ""
  roomTypeId_Gte: Int
  roomTypeId: Int
  ""
  ownerId_Not: Int
  ""
  ownerId_In: [Int!]
  ""
  ownerId_NotIn: [Int!]
  ""
  ownerId_Lt: Int
  ""
  ownerId_Lte: Int
  ""
  ownerId_Gt: Int
  ""
  ownerId_Gte: Int
  ownerId: Int
  "提现时间 不等于"
  createDate_Not: String
  "提现时间 在制定内，如[1,2]"
  createDate_In: [String!]
  "提现时间 不在制定内,如[1,2]"
  createDate_NotIn: [String!]
  "提现时间 小于"
  createDate_Lt: String
  "提现时间 小于等于"
  createDate_Lte: String
  "提现时间 大于"
  createDate_Gt: String
  "提现时间 大于等于"
  createDate_Gte: String
  "提现时间 包含"
  createDate_Contains: String
  "提现时间 不包含"
  createDate_NotContains: String
  "提现时间 开头等于"
  createDate_StartsWith: String
  "提现时间 开头不等于"
  createDate_NotStartsWith: String
  "提现时间 结尾等于"
  createDate_EndsWith: String
  "提现时间 结尾不等于"
  createDate_NotEndsWith: String
  "提现时间"
  createDate: String
  AND: [RoomInputWhere!]
  OR: [RoomInputWhere!]
  NOT: [RoomInputWhere!]
}

input RoomInputOrder {
  relations: String
  "id\n排序可选值为ASC或者DESC"
  id: String
  "房间密码\n排序可选值为ASC或者DESC"
  password: String
  "房间类型\n排序可选值为ASC或者DESC"
  roomType: String
  roomTypeId: String
  "自动开启\n排序可选值为ASC或者DESC"
  autoStart: String
  "房主\n排序可选值为ASC或者DESC"
  owner: String
  ownerId: String
  "加入房间的人\n排序可选值为ASC或者DESC"
  members: String
  gameLogs: String
  "提现时间\n排序可选值为ASC或者DESC"
  createDate: String
}

input PageLimitInput {
  "页码"
  page: Int
  "每页数量"
  psize: Int
}

type RoomType {
  "id"
  id: Int
  "类型名"
  title: String
  rooms: [Room]
  getRooms(where: RoomInputWhere, order: RoomInputOrder, limit: PageLimitInput): [Room]
}

input MemberInputWhere {
  ""
  id_Not: Int
  ""
  id_In: [Int!]
  ""
  id_NotIn: [Int!]
  ""
  id_Lt: Int
  ""
  id_Lte: Int
  ""
  id_Gt: Int
  ""
  id_Gte: Int
  id: Int
  "昵称 不等于"
  nickname_Not: String
  "昵称 在制定内，如[1,2]"
  nickname_In: [String!]
  "昵称 不在制定内,如[1,2]"
  nickname_NotIn: [String!]
  "昵称 小于"
  nickname_Lt: String
  "昵称 小于等于"
  nickname_Lte: String
  "昵称 大于"
  nickname_Gt: String
  "昵称 大于等于"
  nickname_Gte: String
  "昵称 包含"
  nickname_Contains: String
  "昵称 不包含"
  nickname_NotContains: String
  "昵称 开头等于"
  nickname_StartsWith: String
  "昵称 开头不等于"
  nickname_NotStartsWith: String
  "昵称 结尾等于"
  nickname_EndsWith: String
  "昵称 结尾不等于"
  nickname_NotEndsWith: String
  "昵称"
  nickname: String
  "头像 不等于"
  avatar_Not: String
  "头像 在制定内，如[1,2]"
  avatar_In: [String!]
  "头像 不在制定内,如[1,2]"
  avatar_NotIn: [String!]
  "头像 小于"
  avatar_Lt: String
  "头像 小于等于"
  avatar_Lte: String
  "头像 大于"
  avatar_Gt: String
  "头像 大于等于"
  avatar_Gte: String
  "头像 包含"
  avatar_Contains: String
  "头像 不包含"
  avatar_NotContains: String
  "头像 开头等于"
  avatar_StartsWith: String
  "头像 开头不等于"
  avatar_NotStartsWith: String
  "头像 结尾等于"
  avatar_EndsWith: String
  "头像 结尾不等于"
  avatar_NotEndsWith: String
  "头像"
  avatar: String
  "电话 不等于"
  mobile_Not: String
  "电话 在制定内，如[1,2]"
  mobile_In: [String!]
  "电话 不在制定内,如[1,2]"
  mobile_NotIn: [String!]
  "电话 小于"
  mobile_Lt: String
  "电话 小于等于"
  mobile_Lte: String
  "电话 大于"
  mobile_Gt: String
  "电话 大于等于"
  mobile_Gte: String
  "电话 包含"
  mobile_Contains: String
  "电话 不包含"
  mobile_NotContains: String
  "电话 开头等于"
  mobile_StartsWith: String
  "电话 开头不等于"
  mobile_NotStartsWith: String
  "电话 结尾等于"
  mobile_EndsWith: String
  "电话 结尾不等于"
  mobile_NotEndsWith: String
  "电话"
  mobile: String
  "微信id 不等于"
  openid_Not: String
  "微信id 在制定内，如[1,2]"
  openid_In: [String!]
  "微信id 不在制定内,如[1,2]"
  openid_NotIn: [String!]
  "微信id 小于"
  openid_Lt: String
  "微信id 小于等于"
  openid_Lte: String
  "微信id 大于"
  openid_Gt: String
  "微信id 大于等于"
  openid_Gte: String
  "微信id 包含"
  openid_Contains: String
  "微信id 不包含"
  openid_NotContains: String
  "微信id 开头等于"
  openid_StartsWith: String
  "微信id 开头不等于"
  openid_NotStartsWith: String
  "微信id 结尾等于"
  openid_EndsWith: String
  "微信id 结尾不等于"
  openid_NotEndsWith: String
  "微信id"
  openid: String
  "余额 不等于"
  fee_Not: Int
  "余额 在制定内，如[1,2]"
  fee_In: [Int!]
  "余额 不在制定内,如[1,2]"
  fee_NotIn: [Int!]
  "余额 小于"
  fee_Lt: Int
  "余额 小于等于"
  fee_Lte: Int
  "余额 大于"
  fee_Gt: Int
  "余额 大于等于"
  fee_Gte: Int
  "余额"
  fee: Int
  "金币 不等于"
  fee2_Not: Int
  "金币 在制定内，如[1,2]"
  fee2_In: [Int!]
  "金币 不在制定内,如[1,2]"
  fee2_NotIn: [Int!]
  "金币 小于"
  fee2_Lt: Int
  "金币 小于等于"
  fee2_Lte: Int
  "金币 大于"
  fee2_Gt: Int
  "金币 大于等于"
  fee2_Gte: Int
  "金币"
  fee2: Int
  "钻石 不等于"
  fee3_Not: Int
  "钻石 在制定内，如[1,2]"
  fee3_In: [Int!]
  "钻石 不在制定内,如[1,2]"
  fee3_NotIn: [Int!]
  "钻石 小于"
  fee3_Lt: Int
  "钻石 小于等于"
  fee3_Lte: Int
  "钻石 大于"
  fee3_Gt: Int
  "钻石 大于等于"
  fee3_Gte: Int
  "钻石"
  fee3: Int
  "提现时间 不等于"
  createDate_Not: String
  "提现时间 在制定内，如[1,2]"
  createDate_In: [String!]
  "提现时间 不在制定内,如[1,2]"
  createDate_NotIn: [String!]
  "提现时间 小于"
  createDate_Lt: String
  "提现时间 小于等于"
  createDate_Lte: String
  "提现时间 大于"
  createDate_Gt: String
  "提现时间 大于等于"
  createDate_Gte: String
  "提现时间 包含"
  createDate_Contains: String
  "提现时间 不包含"
  createDate_NotContains: String
  "提现时间 开头等于"
  createDate_StartsWith: String
  "提现时间 开头不等于"
  createDate_NotStartsWith: String
  "提现时间 结尾等于"
  createDate_EndsWith: String
  "提现时间 结尾不等于"
  createDate_NotEndsWith: String
  "提现时间"
  createDate: String
  AND: [MemberInputWhere!]
  OR: [MemberInputWhere!]
  NOT: [MemberInputWhere!]
}

input MemberInputOrder {
  relations: String
  id: String
  "昵称\n排序可选值为ASC或者DESC"
  nickname: String
  "头像\n排序可选值为ASC或者DESC"
  avatar: String
  "电话\n排序可选值为ASC或者DESC"
  mobile: String
  "微信id\n排序可选值为ASC或者DESC"
  openid: String
  "余额\n排序可选值为ASC或者DESC"
  fee: String
  "金币\n排序可选值为ASC或者DESC"
  fee2: String
  "钻石\n排序可选值为ASC或者DESC"
  fee3: String
  "用户加入的房间\n排序可选值为ASC或者DESC"
  rooms: String
  "用户创建的房间\n排序可选值为ASC或者DESC"
  createRooms: String
  "提现记录\n排序可选值为ASC或者DESC"
  tixianLogs: String
  "游戏记录\n排序可选值为ASC或者DESC"
  gameLogs: String
  "用户领取的劵\n排序可选值为ASC或者DESC"
  ticketLogs: String
  "提现时间\n排序可选值为ASC或者DESC"
  createDate: String
}

type GameLog {
  relations: [String]
  id: Int
  "输赢"
  status: Int
  "注码"
  count: Int
  "开始时间"
  startTime: Int
  "结束时间"
  endTime: Int
  "房间"
  room: Room
  roomId: Int
  member: Member
  memberId: Int
  "提现时间"
  createDate: String
}

input GameLogInputWhere {
  ""
  id_Not: Int
  ""
  id_In: [Int!]
  ""
  id_NotIn: [Int!]
  ""
  id_Lt: Int
  ""
  id_Lte: Int
  ""
  id_Gt: Int
  ""
  id_Gte: Int
  id: Int
  "输赢 不等于"
  status_Not: Int
  "输赢 在制定内，如[1,2]"
  status_In: [Int!]
  "输赢 不在制定内,如[1,2]"
  status_NotIn: [Int!]
  "输赢 小于"
  status_Lt: Int
  "输赢 小于等于"
  status_Lte: Int
  "输赢 大于"
  status_Gt: Int
  "输赢 大于等于"
  status_Gte: Int
  "输赢"
  status: Int
  "注码 不等于"
  count_Not: Int
  "注码 在制定内，如[1,2]"
  count_In: [Int!]
  "注码 不在制定内,如[1,2]"
  count_NotIn: [Int!]
  "注码 小于"
  count_Lt: Int
  "注码 小于等于"
  count_Lte: Int
  "注码 大于"
  count_Gt: Int
  "注码 大于等于"
  count_Gte: Int
  "注码"
  count: Int
  "开始时间 不等于"
  startTime_Not: Int
  "开始时间 在制定内，如[1,2]"
  startTime_In: [Int!]
  "开始时间 不在制定内,如[1,2]"
  startTime_NotIn: [Int!]
  "开始时间 小于"
  startTime_Lt: Int
  "开始时间 小于等于"
  startTime_Lte: Int
  "开始时间 大于"
  startTime_Gt: Int
  "开始时间 大于等于"
  startTime_Gte: Int
  "开始时间"
  startTime: Int
  "结束时间 不等于"
  endTime_Not: Int
  "结束时间 在制定内，如[1,2]"
  endTime_In: [Int!]
  "结束时间 不在制定内,如[1,2]"
  endTime_NotIn: [Int!]
  "结束时间 小于"
  endTime_Lt: Int
  "结束时间 小于等于"
  endTime_Lte: Int
  "结束时间 大于"
  endTime_Gt: Int
  "结束时间 大于等于"
  endTime_Gte: Int
  "结束时间"
  endTime: Int
  ""
  roomId_Not: Int
  ""
  roomId_In: [Int!]
  ""
  roomId_NotIn: [Int!]
  ""
  roomId_Lt: Int
  ""
  roomId_Lte: Int
  ""
  roomId_Gt: Int
  ""
  roomId_Gte: Int
  roomId: Int
  ""
  memberId_Not: Int
  ""
  memberId_In: [Int!]
  ""
  memberId_NotIn: [Int!]
  ""
  memberId_Lt: Int
  ""
  memberId_Lte: Int
  ""
  memberId_Gt: Int
  ""
  memberId_Gte: Int
  memberId: Int
  "提现时间 不等于"
  createDate_Not: String
  "提现时间 在制定内，如[1,2]"
  createDate_In: [String!]
  "提现时间 不在制定内,如[1,2]"
  createDate_NotIn: [String!]
  "提现时间 小于"
  createDate_Lt: String
  "提现时间 小于等于"
  createDate_Lte: String
  "提现时间 大于"
  createDate_Gt: String
  "提现时间 大于等于"
  createDate_Gte: String
  "提现时间 包含"
  createDate_Contains: String
  "提现时间 不包含"
  createDate_NotContains: String
  "提现时间 开头等于"
  createDate_StartsWith: String
  "提现时间 开头不等于"
  createDate_NotStartsWith: String
  "提现时间 结尾等于"
  createDate_EndsWith: String
  "提现时间 结尾不等于"
  createDate_NotEndsWith: String
  "提现时间"
  createDate: String
  AND: [GameLogInputWhere!]
  OR: [GameLogInputWhere!]
  NOT: [GameLogInputWhere!]
}

input GameLogInputOrder {
  relations: String
  id: String
  "输赢\n排序可选值为ASC或者DESC"
  status: String
  "注码\n排序可选值为ASC或者DESC"
  count: String
  "开始时间\n排序可选值为ASC或者DESC"
  startTime: String
  "结束时间\n排序可选值为ASC或者DESC"
  endTime: String
  "房间\n排序可选值为ASC或者DESC"
  room: String
  roomId: String
  member: String
  memberId: String
  "提现时间\n排序可选值为ASC或者DESC"
  createDate: String
}

type Room {
  relations: [String]
  "id"
  id: Int
  "房间密码"
  password: String
  "房间类型"
  roomType: RoomType
  roomTypeId: Int
  "自动开启"
  autoStart: Boolean
  "房主"
  owner: Member
  ownerId: Int
  "加入房间的人"
  members: [Member]
  getMembers(where: MemberInputWhere, order: MemberInputOrder, limit: PageLimitInput): [Member]
  gameLogs: [GameLog]
  getGameLogs(where: GameLogInputWhere, order: GameLogInputOrder, limit: PageLimitInput): [GameLog]
  "提现时间"
  createDate: String
}

type TixianLog {
  relations: [String]
  id: Int
  "提现人"
  member: Member
  memberId: Int
  "提现数量"
  count: Int
  "提现状态"
  status: Int
  "提现时间"
  createDate: String
}

input TixianLogInputWhere {
  ""
  id_Not: Int
  ""
  id_In: [Int!]
  ""
  id_NotIn: [Int!]
  ""
  id_Lt: Int
  ""
  id_Lte: Int
  ""
  id_Gt: Int
  ""
  id_Gte: Int
  id: Int
  ""
  memberId_Not: Int
  ""
  memberId_In: [Int!]
  ""
  memberId_NotIn: [Int!]
  ""
  memberId_Lt: Int
  ""
  memberId_Lte: Int
  ""
  memberId_Gt: Int
  ""
  memberId_Gte: Int
  memberId: Int
  "提现数量 不等于"
  count_Not: Int
  "提现数量 在制定内，如[1,2]"
  count_In: [Int!]
  "提现数量 不在制定内,如[1,2]"
  count_NotIn: [Int!]
  "提现数量 小于"
  count_Lt: Int
  "提现数量 小于等于"
  count_Lte: Int
  "提现数量 大于"
  count_Gt: Int
  "提现数量 大于等于"
  count_Gte: Int
  "提现数量"
  count: Int
  "提现状态 不等于"
  status_Not: Int
  "提现状态 在制定内，如[1,2]"
  status_In: [Int!]
  "提现状态 不在制定内,如[1,2]"
  status_NotIn: [Int!]
  "提现状态 小于"
  status_Lt: Int
  "提现状态 小于等于"
  status_Lte: Int
  "提现状态 大于"
  status_Gt: Int
  "提现状态 大于等于"
  status_Gte: Int
  "提现状态"
  status: Int
  "提现时间 不等于"
  createDate_Not: String
  "提现时间 在制定内，如[1,2]"
  createDate_In: [String!]
  "提现时间 不在制定内,如[1,2]"
  createDate_NotIn: [String!]
  "提现时间 小于"
  createDate_Lt: String
  "提现时间 小于等于"
  createDate_Lte: String
  "提现时间 大于"
  createDate_Gt: String
  "提现时间 大于等于"
  createDate_Gte: String
  "提现时间 包含"
  createDate_Contains: String
  "提现时间 不包含"
  createDate_NotContains: String
  "提现时间 开头等于"
  createDate_StartsWith: String
  "提现时间 开头不等于"
  createDate_NotStartsWith: String
  "提现时间 结尾等于"
  createDate_EndsWith: String
  "提现时间 结尾不等于"
  createDate_NotEndsWith: String
  "提现时间"
  createDate: String
  AND: [TixianLogInputWhere!]
  OR: [TixianLogInputWhere!]
  NOT: [TixianLogInputWhere!]
}

input TixianLogInputOrder {
  relations: String
  id: String
  "提现人\n排序可选值为ASC或者DESC"
  member: String
  memberId: String
  "提现数量\n排序可选值为ASC或者DESC"
  count: String
  "提现状态\n排序可选值为ASC或者DESC"
  status: String
  "提现时间\n排序可选值为ASC或者DESC"
  createDate: String
}

input TicketLogInputWhere {
  ""
  id_Not: Int
  ""
  id_In: [Int!]
  ""
  id_NotIn: [Int!]
  ""
  id_Lt: Int
  ""
  id_Lte: Int
  ""
  id_Gt: Int
  ""
  id_Gte: Int
  id: Int
  ""
  ticket_Id_Not: Int
  ""
  ticket_Id_In: [Int!]
  ""
  ticket_Id_NotIn: [Int!]
  ""
  ticket_Id_Lt: Int
  ""
  ticket_Id_Lte: Int
  ""
  ticket_Id_Gt: Int
  ""
  ticket_Id_Gte: Int
  ticket_Id: Int
  ""
  member_id_Not: Int
  ""
  member_id_In: [Int!]
  ""
  member_id_NotIn: [Int!]
  ""
  member_id_Lt: Int
  ""
  member_id_Lte: Int
  ""
  member_id_Gt: Int
  ""
  member_id_Gte: Int
  member_id: Int
  "提现时间 不等于"
  createDate_Not: String
  "提现时间 在制定内，如[1,2]"
  createDate_In: [String!]
  "提现时间 不在制定内,如[1,2]"
  createDate_NotIn: [String!]
  "提现时间 小于"
  createDate_Lt: String
  "提现时间 小于等于"
  createDate_Lte: String
  "提现时间 大于"
  createDate_Gt: String
  "提现时间 大于等于"
  createDate_Gte: String
  "提现时间 包含"
  createDate_Contains: String
  "提现时间 不包含"
  createDate_NotContains: String
  "提现时间 开头等于"
  createDate_StartsWith: String
  "提现时间 开头不等于"
  createDate_NotStartsWith: String
  "提现时间 结尾等于"
  createDate_EndsWith: String
  "提现时间 结尾不等于"
  createDate_NotEndsWith: String
  "提现时间"
  createDate: String
  AND: [TicketLogInputWhere!]
  OR: [TicketLogInputWhere!]
  NOT: [TicketLogInputWhere!]
}

input TicketLogInputOrder {
  relations: String
  id: String
  ticket: String
  ticket_Id: String
  member: String
  member_id: String
  "提现时间\n排序可选值为ASC或者DESC"
  createDate: String
}

type Ticket {
  id: Int
  title: String
  "领取记录"
  logs: [TicketLog]
  getTicketLogs(where: TicketLogInputWhere, order: TicketLogInputOrder, limit: PageLimitInput): [TicketLog]
}

type TicketLog {
  relations: [String]
  id: Int
  ticket: Ticket
  ticket_Id: Int
  member: Member
  member_id: Int
  "提现时间"
  createDate: String
}

type Member {
  relations: [String]
  id: Int
  "昵称"
  nickname: String
  "头像"
  avatar: String
  "电话"
  mobile: String
  "微信id"
  openid: String
  "余额"
  fee: Int
  "金币"
  fee2: Int
  "钻石"
  fee3: Int
  "用户加入的房间"
  rooms: [Room]
  getRooms(where: RoomInputWhere, order: RoomInputOrder, limit: PageLimitInput): [Room]
  "用户创建的房间"
  createRooms: [Room]
  getCreateRooms(where: RoomInputWhere, order: RoomInputOrder, limit: PageLimitInput): [Room]
  "提现记录"
  tixianLogs: [TixianLog]
  getTixianLogs(where: TixianLogInputWhere, order: TixianLogInputOrder, limit: PageLimitInput): [TixianLog]
  "游戏记录"
  gameLogs: [GameLog]
  getGameLogs(where: GameLogInputWhere, order: GameLogInputOrder, limit: PageLimitInput): [GameLog]
  "用户领取的劵"
  ticketLogs: [TicketLog]
  getTicketLogs(where: TicketLogInputWhere, order: TicketLogInputOrder, limit: PageLimitInput): [TicketLog]
  "提现时间"
  createDate: String
}

input RoomTypeInputWhere {
  "id 不等于"
  id_Not: Int
  "id 在制定内，如[1,2]"
  id_In: [Int!]
  "id 不在制定内,如[1,2]"
  id_NotIn: [Int!]
  "id 小于"
  id_Lt: Int
  "id 小于等于"
  id_Lte: Int
  "id 大于"
  id_Gt: Int
  "id 大于等于"
  id_Gte: Int
  "id"
  id: Int
  "类型名 不等于"
  title_Not: String
  "类型名 在制定内，如[1,2]"
  title_In: [String!]
  "类型名 不在制定内,如[1,2]"
  title_NotIn: [String!]
  "类型名 小于"
  title_Lt: String
  "类型名 小于等于"
  title_Lte: String
  "类型名 大于"
  title_Gt: String
  "类型名 大于等于"
  title_Gte: String
  "类型名 包含"
  title_Contains: String
  "类型名 不包含"
  title_NotContains: String
  "类型名 开头等于"
  title_StartsWith: String
  "类型名 开头不等于"
  title_NotStartsWith: String
  "类型名 结尾等于"
  title_EndsWith: String
  "类型名 结尾不等于"
  title_NotEndsWith: String
  "类型名"
  title: String
  AND: [RoomTypeInputWhere!]
  OR: [RoomTypeInputWhere!]
  NOT: [RoomTypeInputWhere!]
}

type Setting {
  "id"
  id: Int
  "key"
  key: String
  "value"
  value: String
}

input SettingInput {
  "id"
  id: Int
  "key"
  key: String
  "value"
  value: String
}

input SettingInputWhere {
  "id 不等于"
  id_Not: Int
  "id 在制定内，如[1,2]"
  id_In: [Int!]
  "id 不在制定内,如[1,2]"
  id_NotIn: [Int!]
  "id 小于"
  id_Lt: Int
  "id 小于等于"
  id_Lte: Int
  "id 大于"
  id_Gt: Int
  "id 大于等于"
  id_Gte: Int
  "id"
  id: Int
  "key 不等于"
  key_Not: String
  "key 在制定内，如[1,2]"
  key_In: [String!]
  "key 不在制定内,如[1,2]"
  key_NotIn: [String!]
  "key 小于"
  key_Lt: String
  "key 小于等于"
  key_Lte: String
  "key 大于"
  key_Gt: String
  "key 大于等于"
  key_Gte: String
  "key 包含"
  key_Contains: String
  "key 不包含"
  key_NotContains: String
  "key 开头等于"
  key_StartsWith: String
  "key 开头不等于"
  key_NotStartsWith: String
  "key 结尾等于"
  key_EndsWith: String
  "key 结尾不等于"
  key_NotEndsWith: String
  "key"
  key: String
  "value 不等于"
  value_Not: String
  "value 在制定内，如[1,2]"
  value_In: [String!]
  "value 不在制定内,如[1,2]"
  value_NotIn: [String!]
  "value 小于"
  value_Lt: String
  "value 小于等于"
  value_Lte: String
  "value 大于"
  value_Gt: String
  "value 大于等于"
  value_Gte: String
  "value 包含"
  value_Contains: String
  "value 不包含"
  value_NotContains: String
  "value 开头等于"
  value_StartsWith: String
  "value 开头不等于"
  value_NotStartsWith: String
  "value 结尾等于"
  value_EndsWith: String
  "value 结尾不等于"
  value_NotEndsWith: String
  "value"
  value: String
  AND: [SettingInputWhere!]
  OR: [SettingInputWhere!]
  NOT: [SettingInputWhere!]
}

input TicketInputWhere {
  ""
  id_Not: Int
  ""
  id_In: [Int!]
  ""
  id_NotIn: [Int!]
  ""
  id_Lt: Int
  ""
  id_Lte: Int
  ""
  id_Gt: Int
  ""
  id_Gte: Int
  id: Int
  ""
  title_Not: String
  ""
  title_In: [String!]
  ""
  title_NotIn: [String!]
  ""
  title_Lt: String
  ""
  title_Lte: String
  ""
  title_Gt: String
  ""
  title_Gte: String
  ""
  title_Contains: String
  ""
  title_NotContains: String
  ""
  title_StartsWith: String
  ""
  title_NotStartsWith: String
  ""
  title_EndsWith: String
  ""
  title_NotEndsWith: String
  title: String
  AND: [TicketInputWhere!]
  OR: [TicketInputWhere!]
  NOT: [TicketInputWhere!]
}

input RoomTypeInputOrder {
  "id\n排序可选值为ASC或者DESC"
  id: String
  "类型名\n排序可选值为ASC或者DESC"
  title: String
  rooms: String
}

input SettingInputOrder {
  "id\n排序可选值为ASC或者DESC"
  id: String
  "key\n排序可选值为ASC或者DESC"
  key: String
  "value\n排序可选值为ASC或者DESC"
  value: String
}

input TicketInputOrder {
  id: String
  title: String
  "领取记录\n排序可选值为ASC或者DESC"
  logs: String
}

input MemberPartial {
  relations: [String]
  id: Int
  "昵称"
  nickname: String
  "头像"
  avatar: String
  "电话"
  mobile: String
  "微信id"
  openid: String
  "余额"
  fee: Int
  "金币"
  fee2: Int
  "钻石"
  fee3: Int
  "用户加入的房间"
  rooms: [RoomInput]
  "用户创建的房间"
  createRooms: [RoomInput]
  "提现记录"
  tixianLogs: [TixianLogInput]
  "游戏记录"
  gameLogs: [GameLogInput]
  "用户领取的劵"
  ticketLogs: [TicketLogInput]
  "提现时间"
  createDate: String
}

input RoomPartial {
  relations: [String]
  "id"
  id: Int
  "房间密码"
  password: String
  "房间类型"
  roomType: RoomTypeInput
  roomTypeId: Int
  "自动开启"
  autoStart: Boolean
  "房主"
  owner: MemberInput
  ownerId: Int
  "加入房间的人"
  members: [MemberInput]
  gameLogs: [GameLogInput]
  "提现时间"
  createDate: String
}

input RoomTypePartial {
  "id"
  id: Int
  "类型名"
  title: String
  rooms: [RoomInput]
}

input SettingPartial {
  "id"
  id: Int
  "key"
  key: String
  "value"
  value: String
}

input TixianLogPartial {
  relations: [String]
  id: Int
  "提现人"
  member: MemberInput
  memberId: Int
  "提现数量"
  count: Int
  "提现状态"
  status: Int
  "提现时间"
  createDate: String
}

input GameLogPartial {
  relations: [String]
  id: Int
  "输赢"
  status: Int
  "注码"
  count: Int
  "开始时间"
  startTime: Int
  "结束时间"
  endTime: Int
  "房间"
  room: RoomInput
  roomId: Int
  member: MemberInput
  memberId: Int
  "提现时间"
  createDate: String
}

input TicketPartial {
  id: Int
  title: String
  "领取记录"
  logs: [TicketLogInput]
}

input TicketLogPartial {
  relations: [String]
  id: Int
  ticket: TicketInput
  ticket_Id: Int
  member: MemberInput
  member_id: Int
  "提现时间"
  createDate: String
}

type Query {
  "通过指定条件获取一条数据"
  getMember(
    "条件"
    entity: MemberInputWhere!
  ): Member
  "通过指定条件获取一条数据"
  getRoom(
    "条件"
    entity: RoomInputWhere!
  ): Room
  "通过指定条件获取一条数据"
  getRoomType(
    "条件"
    entity: RoomTypeInputWhere!
  ): RoomType
  "通过指定条件获取一条数据"
  getSetting(
    "条件"
    entity: SettingInputWhere!
  ): Setting
  "通过指定条件获取一条数据"
  getTixianLog(
    "条件"
    entity: TixianLogInputWhere!
  ): TixianLog
  "通过指定条件获取一条数据"
  getGameLog(
    "条件"
    entity: GameLogInputWhere!
  ): GameLog
  "通过指定条件获取一条数据"
  getTicket(
    "条件"
    entity: TicketInputWhere!
  ): Ticket
  "通过指定条件获取一条数据"
  getTicketLog(
    "条件"
    entity: TicketLogInputWhere!
  ): TicketLog
  "通过制定条件获取一组数据"
  findMember(
    "条件"
    entity: MemberInputWhere!
    order: MemberInputOrder!
    limit: PageLimitInput
  ): [Member]
  "通过制定条件获取一组数据"
  findRoom(
    "条件"
    entity: RoomInputWhere!
    order: RoomInputOrder!
    limit: PageLimitInput
  ): [Room]
  "通过制定条件获取一组数据"
  findRoomType(
    "条件"
    entity: RoomTypeInputWhere!
    order: RoomTypeInputOrder!
    limit: PageLimitInput
  ): [RoomType]
  "通过制定条件获取一组数据"
  findSetting(
    "条件"
    entity: SettingInputWhere!
    order: SettingInputOrder!
    limit: PageLimitInput
  ): [Setting]
  "通过制定条件获取一组数据"
  findTixianLog(
    "条件"
    entity: TixianLogInputWhere!
    order: TixianLogInputOrder!
    limit: PageLimitInput
  ): [TixianLog]
  "通过制定条件获取一组数据"
  findGameLog(
    "条件"
    entity: GameLogInputWhere!
    order: GameLogInputOrder!
    limit: PageLimitInput
  ): [GameLog]
  "通过制定条件获取一组数据"
  findTicket(
    "条件"
    entity: TicketInputWhere!
    order: TicketInputOrder!
    limit: PageLimitInput
  ): [Ticket]
  "通过制定条件获取一组数据"
  findTicketLog(
    "条件"
    entity: TicketLogInputWhere!
    order: TicketLogInputOrder!
    limit: PageLimitInput
  ): [TicketLog]
  "通过制定条件获取一组数据"
  countMember: Int
  "通过制定条件获取一组数据"
  countRoom: Int
  "通过制定条件获取一组数据"
  countRoomType: Int
  "通过制定条件获取一组数据"
  countSetting: Int
  "通过制定条件获取一组数据"
  countTixianLog: Int
  "通过制定条件获取一组数据"
  countGameLog: Int
  "通过制定条件获取一组数据"
  countTicket: Int
  "通过制定条件获取一组数据"
  countTicketLog: Int
}

type Mutation {
  "没有就插入，有就更新"
  saveMember(
    "要保存的数据"
    entity: MemberInput!
  ): Member
  "没有就插入，有就更新"
  saveRoom(
    "要保存的数据"
    entity: RoomInput!
  ): Room
  "没有就插入，有就更新"
  saveRoomType(
    "要保存的数据"
    entity: RoomTypeInput!
  ): RoomType
  "没有就插入，有就更新"
  saveSetting(
    "要保存的数据"
    entity: SettingInput!
  ): Setting
  "没有就插入，有就更新"
  saveTixianLog(
    "要保存的数据"
    entity: TixianLogInput!
  ): TixianLog
  "没有就插入，有就更新"
  saveGameLog(
    "要保存的数据"
    entity: GameLogInput!
  ): GameLog
  "没有就插入，有就更新"
  saveTicket(
    "要保存的数据"
    entity: TicketInput!
  ): Ticket
  "没有就插入，有就更新"
  saveTicketLog(
    "要保存的数据"
    entity: TicketLogInput!
  ): TicketLog
  "插入数据"
  insertMember(
    "要插入的数据"
    entity: MemberInput!
  ): Member
  "插入数据"
  insertRoom(
    "要插入的数据"
    entity: RoomInput!
  ): Room
  "插入数据"
  insertRoomType(
    "要插入的数据"
    entity: RoomTypeInput!
  ): RoomType
  "插入数据"
  insertSetting(
    "要插入的数据"
    entity: SettingInput!
  ): Setting
  "插入数据"
  insertTixianLog(
    "要插入的数据"
    entity: TixianLogInput!
  ): TixianLog
  "插入数据"
  insertGameLog(
    "要插入的数据"
    entity: GameLogInput!
  ): GameLog
  "插入数据"
  insertTicket(
    "要插入的数据"
    entity: TicketInput!
  ): Ticket
  "插入数据"
  insertTicketLog(
    "要插入的数据"
    entity: TicketLogInput!
  ): TicketLog
  "更新数据"
  updateMember(
    ""
    where: MemberPartial!
    entity: MemberInput!
  ): Member
  "更新数据"
  updateRoom(
    ""
    where: RoomPartial!
    entity: RoomInput!
  ): Room
  "更新数据"
  updateRoomType(
    ""
    where: RoomTypePartial!
    entity: RoomTypeInput!
  ): RoomType
  "更新数据"
  updateSetting(
    ""
    where: SettingPartial!
    entity: SettingInput!
  ): Setting
  "更新数据"
  updateTixianLog(
    ""
    where: TixianLogPartial!
    entity: TixianLogInput!
  ): TixianLog
  "更新数据"
  updateGameLog(
    ""
    where: GameLogPartial!
    entity: GameLogInput!
  ): GameLog
  "更新数据"
  updateTicket(
    ""
    where: TicketPartial!
    entity: TicketInput!
  ): Ticket
  "更新数据"
  updateTicketLog(
    ""
    where: TicketLogPartial!
    entity: TicketLogInput!
  ): TicketLog
  "res\n删除"
  deleteMember(
    "根据id删除"
    id: Int!
  ): Boolean
  "res\n删除"
  deleteRoom(
    "根据id删除"
    id: Int!
  ): Boolean
  "res\n删除"
  deleteRoomType(
    "根据id删除"
    id: Int!
  ): Boolean
  "res\n删除"
  deleteSetting(
    "根据id删除"
    id: Int!
  ): Boolean
  "res\n删除"
  deleteTixianLog(
    "根据id删除"
    id: Int!
  ): Boolean
  "res\n删除"
  deleteGameLog(
    "根据id删除"
    id: Int!
  ): Boolean
  "res\n删除"
  deleteTicket(
    "根据id删除"
    id: Int!
  ): Boolean
  "res\n删除"
  deleteTicketLog(
    "根据id删除"
    id: Int!
  ): Boolean
}
